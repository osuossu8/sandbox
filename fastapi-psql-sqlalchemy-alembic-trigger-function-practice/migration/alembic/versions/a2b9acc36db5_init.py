"""init

Revision ID: a2b9acc36db5
Revises:
Create Date: 2025-04-08 20:17:51.691175

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a2b9acc36db5"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def create_updated_at_trigger_function(op) -> None:
    op.execute("""
    CREATE OR REPLACE FUNCTION update_updated_at_column()
    RETURNS TRIGGER AS $$
    BEGIN
        NEW.updated_at = NOW();
        RETURN NEW;
    END;
    $$ LANGUAGE plpgsql;
    """)


def drop_updated_at_trigger_function(op) -> None:
    op.execute("""
    DROP FUNCTION IF EXISTS update_updated_at_column();
    """)


def add_updated_at_trigger(op, table_name) -> None:
    trigger_name = f"trg_{table_name}_updated_at"
    op.execute(f"""
    CREATE TRIGGER {trigger_name}
    BEFORE UPDATE ON {table_name}
    FOR EACH ROW
    EXECUTE PROCEDURE update_updated_at_column();
    """)


def drop_updated_at_trigger(op, table_name) -> None:
    trigger_name = f"trg_{table_name}_updated_at"
    op.execute(f"""
    DROP TRIGGER IF EXISTS {trigger_name} ON {table_name};
    """)


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("done", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tasks_done"), "tasks", ["done"], unique=False)
    op.create_index(op.f("ix_tasks_id"), "tasks", ["id"], unique=False)
    op.create_index(op.f("ix_tasks_title"), "tasks", ["title"], unique=False)

    ### Manulally added
    create_updated_at_trigger_function(op)

    for table in ["tasks"]:
        add_updated_at_trigger(op, table)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tasks_title"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_id"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_done"), table_name="tasks")
    op.drop_table("tasks")

    ### Manulally added
    for table in ["tasks"]:
        drop_updated_at_trigger(op, table)

    drop_updated_at_trigger_function(op)
    # ### end Alembic commands ###
